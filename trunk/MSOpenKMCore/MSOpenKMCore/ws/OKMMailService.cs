//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3053
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;


namespace MSOpenKMCore.ws
{

    // 
    // Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.3038.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "OKMMailBinding", Namespace = "http://endpoint.ws.openkm.com/")]
    public partial class OKMMailService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback createOperationCompleted;

        private System.Threading.SendOrPostCallback deleteOperationCompleted;

        private System.Threading.SendOrPostCallback getChildsOperationCompleted;

        private System.Threading.SendOrPostCallback getPropertiesOperationCompleted;

        private System.Threading.SendOrPostCallback moveOperationCompleted;

        private System.Threading.SendOrPostCallback renameOperationCompleted;

        /// <remarks/>
        public OKMMailService(String host)
        {
            if (host.EndsWith("/"))
            {
                this.Url = host + "OKMMail";
            }
            else
            {
                this.Url = host + "/OKMMail";
            }
        } 

        /// <remarks/>
        public event createCompletedEventHandler createCompleted;

        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;

        /// <remarks/>
        public event getChildsCompletedEventHandler getChildsCompleted;

        /// <remarks/>
        public event getPropertiesCompletedEventHandler getPropertiesCompleted;

        /// <remarks/>
        public event moveCompletedEventHandler moveCompleted;

        /// <remarks/>
        public event renameCompletedEventHandler renameCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mail create(string token, mail mail)
        {
            object[] results = this.Invoke("create", new object[] {
                    token,
                    mail});
            return ((mail)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Begincreate(string token, mail mail, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("create", new object[] {
                    token,
                    mail}, callback, asyncState);
        }

        /// <remarks/>
        public mail Endcreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((mail)(results[0]));
        }

        /// <remarks/>
        public void createAsync(string token, mail mail)
        {
            this.createAsync(token, mail, null);
        }

        /// <remarks/>
        public void createAsync(string token, mail mail, object userState)
        {
            if ((this.createOperationCompleted == null))
            {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                    token,
                    mail}, this.createOperationCompleted, userState);
        }

        private void OncreateOperationCompleted(object arg)
        {
            if ((this.createCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void delete(string token, string mailPath)
        {
            this.Invoke("delete", new object[] {
                    token,
                    mailPath});
        }

        /// <remarks/>
        public System.IAsyncResult Begindelete(string token, string mailPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("delete", new object[] {
                    token,
                    mailPath}, callback, asyncState);
        }

        /// <remarks/>
        public void Enddelete(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteAsync(string token, string mailPath)
        {
            this.deleteAsync(token, mailPath, null);
        }

        /// <remarks/>
        public void deleteAsync(string token, string mailPath, object userState)
        {
            if ((this.deleteOperationCompleted == null))
            {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                    token,
                    mailPath}, this.deleteOperationCompleted, userState);
        }

        private void OndeleteOperationCompleted(object arg)
        {
            if ((this.deleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mail[] getChilds(string token, string mailPath)
        {
            object[] results = this.Invoke("getChilds", new object[] {
                    token,
                    mailPath});
            return ((mail[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetChilds(string token, string mailPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getChilds", new object[] {
                    token,
                    mailPath}, callback, asyncState);
        }

        /// <remarks/>
        public mail[] EndgetChilds(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((mail[])(results[0]));
        }

        /// <remarks/>
        public void getChildsAsync(string token, string mailPath)
        {
            this.getChildsAsync(token, mailPath, null);
        }

        /// <remarks/>
        public void getChildsAsync(string token, string mailPath, object userState)
        {
            if ((this.getChildsOperationCompleted == null))
            {
                this.getChildsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildsOperationCompleted);
            }
            this.InvokeAsync("getChilds", new object[] {
                    token,
                    mailPath}, this.getChildsOperationCompleted, userState);
        }

        private void OngetChildsOperationCompleted(object arg)
        {
            if ((this.getChildsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildsCompleted(this, new getChildsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mail getProperties(string token, string mailPath)
        {
            object[] results = this.Invoke("getProperties", new object[] {
                    token,
                    mailPath});
            return ((mail)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetProperties(string token, string mailPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getProperties", new object[] {
                    token,
                    mailPath}, callback, asyncState);
        }

        /// <remarks/>
        public mail EndgetProperties(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((mail)(results[0]));
        }

        /// <remarks/>
        public void getPropertiesAsync(string token, string mailPath)
        {
            this.getPropertiesAsync(token, mailPath, null);
        }

        /// <remarks/>
        public void getPropertiesAsync(string token, string mailPath, object userState)
        {
            if ((this.getPropertiesOperationCompleted == null))
            {
                this.getPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropertiesOperationCompleted);
            }
            this.InvokeAsync("getProperties", new object[] {
                    token,
                    mailPath}, this.getPropertiesOperationCompleted, userState);
        }

        private void OngetPropertiesOperationCompleted(object arg)
        {
            if ((this.getPropertiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropertiesCompleted(this, new getPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void move(string token, string mailPath, string dstPath)
        {
            this.Invoke("move", new object[] {
                    token,
                    mailPath,
                    dstPath});
        }

        /// <remarks/>
        public System.IAsyncResult Beginmove(string token, string mailPath, string dstPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("move", new object[] {
                    token,
                    mailPath,
                    dstPath}, callback, asyncState);
        }

        /// <remarks/>
        public void Endmove(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void moveAsync(string token, string mailPath, string dstPath)
        {
            this.moveAsync(token, mailPath, dstPath, null);
        }

        /// <remarks/>
        public void moveAsync(string token, string mailPath, string dstPath, object userState)
        {
            if ((this.moveOperationCompleted == null))
            {
                this.moveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveOperationCompleted);
            }
            this.InvokeAsync("move", new object[] {
                    token,
                    mailPath,
                    dstPath}, this.moveOperationCompleted, userState);
        }

        private void OnmoveOperationCompleted(object arg)
        {
            if ((this.moveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mail rename(string token, string mailPath, string newName)
        {
            object[] results = this.Invoke("rename", new object[] {
                    token,
                    mailPath,
                    newName});
            return ((mail)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginrename(string token, string mailPath, string newName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("rename", new object[] {
                    token,
                    mailPath,
                    newName}, callback, asyncState);
        }

        /// <remarks/>
        public mail Endrename(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((mail)(results[0]));
        }

        /// <remarks/>
        public void renameAsync(string token, string mailPath, string newName)
        {
            this.renameAsync(token, mailPath, newName, null);
        }

        /// <remarks/>
        public void renameAsync(string token, string mailPath, string newName, object userState)
        {
            if ((this.renameOperationCompleted == null))
            {
                this.renameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameOperationCompleted);
            }
            this.InvokeAsync("rename", new object[] {
                    token,
                    mailPath,
                    newName}, this.renameOperationCompleted, userState);
        }

        private void OnrenameOperationCompleted(object arg)
        {
            if ((this.renameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameCompleted(this, new renameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    public partial class mail
    {
    }

    public partial class document
    {
    }

    /// <comentarios/>
    public partial class version
    {
    }

    public partial class note
    {
    }

    public partial class @lock
    {        
    }

    public partial class folder
    {        
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public mail Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((mail)(this.results[0]));
            }
        }

        
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getChildsCompletedEventHandler(object sender, getChildsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChildsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getChildsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public mail[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((mail[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getPropertiesCompletedEventHandler(object sender, getPropertiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public mail Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((mail)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void moveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void renameCompletedEventHandler(object sender, renameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal renameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public mail Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((mail)(this.results[0]));
            }
        }
    }

}