//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3053
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace MSOpenKMCore.ws
{

    // 
    // Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.3038.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "OKMAuthBinding", Namespace = "http://endpoint.ws.openkm.com/")]
    public partial class OKMAuthService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback getGrantedRolesOperationCompleted;

        private System.Threading.SendOrPostCallback getGrantedUsersOperationCompleted;

        private System.Threading.SendOrPostCallback getMailsOperationCompleted;

        private System.Threading.SendOrPostCallback getRolesOperationCompleted;

        private System.Threading.SendOrPostCallback getRolesByUserOperationCompleted;

        private System.Threading.SendOrPostCallback getUsersOperationCompleted;

        private System.Threading.SendOrPostCallback getUsersByRoleOperationCompleted;

        private System.Threading.SendOrPostCallback grantRoleOperationCompleted;

        private System.Threading.SendOrPostCallback grantUserOperationCompleted;

        private System.Threading.SendOrPostCallback loginOperationCompleted;

        private System.Threading.SendOrPostCallback logoutOperationCompleted;

        private System.Threading.SendOrPostCallback revokeRoleOperationCompleted;

        private System.Threading.SendOrPostCallback revokeUserOperationCompleted;

        /// <remarks/>
        public OKMAuthService(String host)
        {
            if (host.EndsWith("/"))
            {
                this.Url = host + "OKMAuth";
            }
            else
            {
                this.Url = host + "/OKMAuth";
            }
        }

        /// <remarks/>
        public event getGrantedRolesCompletedEventHandler getGrantedRolesCompleted;

        /// <remarks/>
        public event getGrantedUsersCompletedEventHandler getGrantedUsersCompleted;

        /// <remarks/>
        public event getMailsCompletedEventHandler getMailsCompleted;

        /// <remarks/>
        public event getRolesCompletedEventHandler getRolesCompleted;

        /// <remarks/>
        public event getRolesByUserCompletedEventHandler getRolesByUserCompleted;

        /// <remarks/>
        public event getUsersCompletedEventHandler getUsersCompleted;

        /// <remarks/>
        public event getUsersByRoleCompletedEventHandler getUsersByRoleCompleted;

        /// <remarks/>
        public event grantRoleCompletedEventHandler grantRoleCompleted;

        /// <remarks/>
        public event grantUserCompletedEventHandler grantUserCompleted;

        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;

        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;

        /// <remarks/>
        public event revokeRoleCompletedEventHandler revokeRoleCompleted;

        /// <remarks/>
        public event revokeUserCompletedEventHandler revokeUserCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bytePair[] getGrantedRoles(string token, string nodePath)
        {
            object[] results = this.Invoke("getGrantedRoles", new object[] {
                    token,
                    nodePath});
            return ((bytePair[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetGrantedRoles(string token, string nodePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getGrantedRoles", new object[] {
                    token,
                    nodePath}, callback, asyncState);
        }

        /// <remarks/>
        public bytePair[] EndgetGrantedRoles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bytePair[])(results[0]));
        }

        /// <remarks/>
        public void getGrantedRolesAsync(string token, string nodePath)
        {
            this.getGrantedRolesAsync(token, nodePath, null);
        }

        /// <remarks/>
        public void getGrantedRolesAsync(string token, string nodePath, object userState)
        {
            if ((this.getGrantedRolesOperationCompleted == null))
            {
                this.getGrantedRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGrantedRolesOperationCompleted);
            }
            this.InvokeAsync("getGrantedRoles", new object[] {
                    token,
                    nodePath}, this.getGrantedRolesOperationCompleted, userState);
        }

        private void OngetGrantedRolesOperationCompleted(object arg)
        {
            if ((this.getGrantedRolesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGrantedRolesCompleted(this, new getGrantedRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bytePair[] getGrantedUsers(string token, string nodePath)
        {
            object[] results = this.Invoke("getGrantedUsers", new object[] {
                    token,
                    nodePath});
            return ((bytePair[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetGrantedUsers(string token, string nodePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getGrantedUsers", new object[] {
                    token,
                    nodePath}, callback, asyncState);
        }

        /// <remarks/>
        public bytePair[] EndgetGrantedUsers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bytePair[])(results[0]));
        }

        /// <remarks/>
        public void getGrantedUsersAsync(string token, string nodePath)
        {
            this.getGrantedUsersAsync(token, nodePath, null);
        }

        /// <remarks/>
        public void getGrantedUsersAsync(string token, string nodePath, object userState)
        {
            if ((this.getGrantedUsersOperationCompleted == null))
            {
                this.getGrantedUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGrantedUsersOperationCompleted);
            }
            this.InvokeAsync("getGrantedUsers", new object[] {
                    token,
                    nodePath}, this.getGrantedUsersOperationCompleted, userState);
        }

        private void OngetGrantedUsersOperationCompleted(object arg)
        {
            if ((this.getGrantedUsersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGrantedUsersCompleted(this, new getGrantedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getMails(string token, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] users)
        {
            object[] results = this.Invoke("getMails", new object[] {
                    token,
                    users});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetMails(string token, string[] users, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getMails", new object[] {
                    token,
                    users}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetMails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getMailsAsync(string token, string[] users)
        {
            this.getMailsAsync(token, users, null);
        }

        /// <remarks/>
        public void getMailsAsync(string token, string[] users, object userState)
        {
            if ((this.getMailsOperationCompleted == null))
            {
                this.getMailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMailsOperationCompleted);
            }
            this.InvokeAsync("getMails", new object[] {
                    token,
                    users}, this.getMailsOperationCompleted, userState);
        }

        private void OngetMailsOperationCompleted(object arg)
        {
            if ((this.getMailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMailsCompleted(this, new getMailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getRoles(string token)
        {
            object[] results = this.Invoke("getRoles", new object[] {
                    token});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetRoles(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getRoles", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetRoles(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getRolesAsync(string token)
        {
            this.getRolesAsync(token, null);
        }

        /// <remarks/>
        public void getRolesAsync(string token, object userState)
        {
            if ((this.getRolesOperationCompleted == null))
            {
                this.getRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesOperationCompleted);
            }
            this.InvokeAsync("getRoles", new object[] {
                    token}, this.getRolesOperationCompleted, userState);
        }

        private void OngetRolesOperationCompleted(object arg)
        {
            if ((this.getRolesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesCompleted(this, new getRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getRolesByUser(string token, string user)
        {
            object[] results = this.Invoke("getRolesByUser", new object[] {
                    token,
                    user});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetRolesByUser(string token, string user, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getRolesByUser", new object[] {
                    token,
                    user}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetRolesByUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getRolesByUserAsync(string token, string user)
        {
            this.getRolesByUserAsync(token, user, null);
        }

        /// <remarks/>
        public void getRolesByUserAsync(string token, string user, object userState)
        {
            if ((this.getRolesByUserOperationCompleted == null))
            {
                this.getRolesByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesByUserOperationCompleted);
            }
            this.InvokeAsync("getRolesByUser", new object[] {
                    token,
                    user}, this.getRolesByUserOperationCompleted, userState);
        }

        private void OngetRolesByUserOperationCompleted(object arg)
        {
            if ((this.getRolesByUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesByUserCompleted(this, new getRolesByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getUsers(string token)
        {
            object[] results = this.Invoke("getUsers", new object[] {
                    token});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetUsers(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getUsers", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetUsers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getUsersAsync(string token)
        {
            this.getUsersAsync(token, null);
        }

        /// <remarks/>
        public void getUsersAsync(string token, object userState)
        {
            if ((this.getUsersOperationCompleted == null))
            {
                this.getUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersOperationCompleted);
            }
            this.InvokeAsync("getUsers", new object[] {
                    token}, this.getUsersOperationCompleted, userState);
        }

        private void OngetUsersOperationCompleted(object arg)
        {
            if ((this.getUsersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersCompleted(this, new getUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getUsersByRole(string token, string role)
        {
            object[] results = this.Invoke("getUsersByRole", new object[] {
                    token,
                    role});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetUsersByRole(string token, string role, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getUsersByRole", new object[] {
                    token,
                    role}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetUsersByRole(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getUsersByRoleAsync(string token, string role)
        {
            this.getUsersByRoleAsync(token, role, null);
        }

        /// <remarks/>
        public void getUsersByRoleAsync(string token, string role, object userState)
        {
            if ((this.getUsersByRoleOperationCompleted == null))
            {
                this.getUsersByRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersByRoleOperationCompleted);
            }
            this.InvokeAsync("getUsersByRole", new object[] {
                    token,
                    role}, this.getUsersByRoleOperationCompleted, userState);
        }

        private void OngetUsersByRoleOperationCompleted(object arg)
        {
            if ((this.getUsersByRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersByRoleCompleted(this, new getUsersByRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void grantRole(string token, string nodePath, string role, int permissions, bool recursive)
        {
            this.Invoke("grantRole", new object[] {
                    token,
                    nodePath,
                    role,
                    permissions,
                    recursive});
        }

        /// <remarks/>
        public System.IAsyncResult BegingrantRole(string token, string nodePath, string role, int permissions, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("grantRole", new object[] {
                    token,
                    nodePath,
                    role,
                    permissions,
                    recursive}, callback, asyncState);
        }

        /// <remarks/>
        public void EndgrantRole(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void grantRoleAsync(string token, string nodePath, string role, int permissions, bool recursive)
        {
            this.grantRoleAsync(token, nodePath, role, permissions, recursive, null);
        }

        /// <remarks/>
        public void grantRoleAsync(string token, string nodePath, string role, int permissions, bool recursive, object userState)
        {
            if ((this.grantRoleOperationCompleted == null))
            {
                this.grantRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngrantRoleOperationCompleted);
            }
            this.InvokeAsync("grantRole", new object[] {
                    token,
                    nodePath,
                    role,
                    permissions,
                    recursive}, this.grantRoleOperationCompleted, userState);
        }

        private void OngrantRoleOperationCompleted(object arg)
        {
            if ((this.grantRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.grantRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void grantUser(string token, string nodePath, string user, int permissions, bool recursive)
        {
            this.Invoke("grantUser", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive});
        }

        /// <remarks/>
        public System.IAsyncResult BegingrantUser(string token, string nodePath, string user, int permissions, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("grantUser", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive}, callback, asyncState);
        }

        /// <remarks/>
        public void EndgrantUser(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void grantUserAsync(string token, string nodePath, string user, int permissions, bool recursive)
        {
            this.grantUserAsync(token, nodePath, user, permissions, recursive, null);
        }

        /// <remarks/>
        public void grantUserAsync(string token, string nodePath, string user, int permissions, bool recursive, object userState)
        {
            if ((this.grantUserOperationCompleted == null))
            {
                this.grantUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngrantUserOperationCompleted);
            }
            this.InvokeAsync("grantUser", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive}, this.grantUserOperationCompleted, userState);
        }

        private void OngrantUserOperationCompleted(object arg)
        {
            if ((this.grantUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.grantUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string login(string user, string password)
        {
            object[] results = this.Invoke("login", new object[] {
                    user,
                    password});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginlogin(string user, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("login", new object[] {
                    user,
                    password}, callback, asyncState);
        }

        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void loginAsync(string user, string password)
        {
            this.loginAsync(user, password, null);
        }

        /// <remarks/>
        public void loginAsync(string user, string password, object userState)
        {
            if ((this.loginOperationCompleted == null))
            {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                    user,
                    password}, this.loginOperationCompleted, userState);
        }

        private void OnloginOperationCompleted(object arg)
        {
            if ((this.loginCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void logout(string token)
        {
            this.Invoke("logout", new object[] {
                    token});
        }

        /// <remarks/>
        public System.IAsyncResult Beginlogout(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("logout", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public void Endlogout(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void logoutAsync(string token)
        {
            this.logoutAsync(token, null);
        }

        /// <remarks/>
        public void logoutAsync(string token, object userState)
        {
            if ((this.logoutOperationCompleted == null))
            {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                    token}, this.logoutOperationCompleted, userState);
        }

        private void OnlogoutOperationCompleted(object arg)
        {
            if ((this.logoutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void revokeRole(string token, string nodePath, string user, int permissions, bool recursive)
        {
            this.Invoke("revokeRole", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive});
        }

        /// <remarks/>
        public System.IAsyncResult BeginrevokeRole(string token, string nodePath, string user, int permissions, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("revokeRole", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive}, callback, asyncState);
        }

        /// <remarks/>
        public void EndrevokeRole(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void revokeRoleAsync(string token, string nodePath, string user, int permissions, bool recursive)
        {
            this.revokeRoleAsync(token, nodePath, user, permissions, recursive, null);
        }

        /// <remarks/>
        public void revokeRoleAsync(string token, string nodePath, string user, int permissions, bool recursive, object userState)
        {
            if ((this.revokeRoleOperationCompleted == null))
            {
                this.revokeRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrevokeRoleOperationCompleted);
            }
            this.InvokeAsync("revokeRole", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive}, this.revokeRoleOperationCompleted, userState);
        }

        private void OnrevokeRoleOperationCompleted(object arg)
        {
            if ((this.revokeRoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.revokeRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://endpoint.ws.openkm.com/", ResponseNamespace = "http://endpoint.ws.openkm.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        public void revokeUser(string token, string nodePath, string user, int permissions, bool recursive)
        {
            this.Invoke("revokeUser", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive});
        }

        /// <remarks/>
        public System.IAsyncResult BeginrevokeUser(string token, string nodePath, string user, int permissions, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("revokeUser", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive}, callback, asyncState);
        }

        /// <remarks/>
        public void EndrevokeUser(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void revokeUserAsync(string token, string nodePath, string user, int permissions, bool recursive)
        {
            this.revokeUserAsync(token, nodePath, user, permissions, recursive, null);
        }

        /// <remarks/>
        public void revokeUserAsync(string token, string nodePath, string user, int permissions, bool recursive, object userState)
        {
            if ((this.revokeUserOperationCompleted == null))
            {
                this.revokeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrevokeUserOperationCompleted);
            }
            this.InvokeAsync("revokeUser", new object[] {
                    token,
                    nodePath,
                    user,
                    permissions,
                    recursive}, this.revokeUserOperationCompleted, userState);
        }

        private void OnrevokeUserOperationCompleted(object arg)
        {
            if ((this.revokeUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.revokeUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://endpoint.ws.openkm.com/")]
    public partial class bytePair
    {

        private string keyField;

        private sbyte valueField;

        private bool valueFieldSpecified;

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sbyte value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified
        {
            get
            {
                return this.valueFieldSpecified;
            }
            set
            {
                this.valueFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getGrantedRolesCompletedEventHandler(object sender, getGrantedRolesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGrantedRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getGrantedRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bytePair[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bytePair[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getGrantedUsersCompletedEventHandler(object sender, getGrantedUsersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGrantedUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getGrantedUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bytePair[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bytePair[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getMailsCompletedEventHandler(object sender, getMailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getRolesCompletedEventHandler(object sender, getRolesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getRolesByUserCompletedEventHandler(object sender, getRolesByUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRolesByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRolesByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getUsersCompletedEventHandler(object sender, getUsersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getUsersByRoleCompletedEventHandler(object sender, getUsersByRoleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersByRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getUsersByRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void grantRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void grantUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void revokeRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void revokeUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

}