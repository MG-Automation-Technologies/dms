//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.3038.
// 

namespace MSOpenKMCore.repository.ws
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "OKMRepositorySoapBinding", Namespace = "http://ws.openkm.com")]
    public partial class OKMRepositoryService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback getNodeUuidOperationCompleted;

        private System.Threading.SendOrPostCallback getNodePathOperationCompleted;

        private System.Threading.SendOrPostCallback getTemplatesFolderOperationCompleted;

        private System.Threading.SendOrPostCallback purgeTrashOperationCompleted;

        private System.Threading.SendOrPostCallback getMailFolderOperationCompleted;

        private System.Threading.SendOrPostCallback getThesaurusFolderOperationCompleted;

        private System.Threading.SendOrPostCallback getPersonalFolderOperationCompleted;

        private System.Threading.SendOrPostCallback hasNodeOperationCompleted;

        private System.Threading.SendOrPostCallback getRootFolderOperationCompleted;

        private System.Threading.SendOrPostCallback getTrashFolderOperationCompleted;

        private System.Threading.SendOrPostCallback getAppVersionOperationCompleted;

        private System.Threading.SendOrPostCallback getCategoriesFolderOperationCompleted;

        /// <remarks/>
        public OKMRepositoryService()
        {
            this.Url = "http://localhost:8080/OpenKM/services/OKMRepository";
        }

        /// <remarks/>
        public OKMRepositoryService(string url)
        {
            if (Url.EndsWith("/"))
            {
                this.Url = Url + "services/OKMRepository";
            }
            else
            {
                this.Url = Url + "/services/OKMRepository";
            }
        }

        /// <remarks/>
        public event getNodeUuidCompletedEventHandler getNodeUuidCompleted;

        /// <remarks/>
        public event getNodePathCompletedEventHandler getNodePathCompleted;

        /// <remarks/>
        public event getTemplatesFolderCompletedEventHandler getTemplatesFolderCompleted;

        /// <remarks/>
        public event purgeTrashCompletedEventHandler purgeTrashCompleted;

        /// <remarks/>
        public event getMailFolderCompletedEventHandler getMailFolderCompleted;

        /// <remarks/>
        public event getThesaurusFolderCompletedEventHandler getThesaurusFolderCompleted;

        /// <remarks/>
        public event getPersonalFolderCompletedEventHandler getPersonalFolderCompleted;

        /// <remarks/>
        public event hasNodeCompletedEventHandler hasNodeCompleted;

        /// <remarks/>
        public event getRootFolderCompletedEventHandler getRootFolderCompleted;

        /// <remarks/>
        public event getTrashFolderCompletedEventHandler getTrashFolderCompleted;

        /// <remarks/>
        public event getAppVersionCompletedEventHandler getAppVersionCompleted;

        /// <remarks/>
        public event getCategoriesFolderCompletedEventHandler getCategoriesFolderCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getNodeUuid([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string path)
        {
            object[] results = this.Invoke("getNodeUuid", new object[] {
                    token,
                    path});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetNodeUuid(string token, string path, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getNodeUuid", new object[] {
                    token,
                    path}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetNodeUuid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getNodeUuidAsync(string token, string path)
        {
            this.getNodeUuidAsync(token, path, null);
        }

        /// <remarks/>
        public void getNodeUuidAsync(string token, string path, object userState)
        {
            if ((this.getNodeUuidOperationCompleted == null))
            {
                this.getNodeUuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNodeUuidOperationCompleted);
            }
            this.InvokeAsync("getNodeUuid", new object[] {
                    token,
                    path}, this.getNodeUuidOperationCompleted, userState);
        }

        private void OngetNodeUuidOperationCompleted(object arg)
        {
            if ((this.getNodeUuidCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNodeUuidCompleted(this, new getNodeUuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getNodePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid)
        {
            object[] results = this.Invoke("getNodePath", new object[] {
                    token,
                    uuid});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetNodePath(string token, string uuid, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getNodePath", new object[] {
                    token,
                    uuid}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetNodePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getNodePathAsync(string token, string uuid)
        {
            this.getNodePathAsync(token, uuid, null);
        }

        /// <remarks/>
        public void getNodePathAsync(string token, string uuid, object userState)
        {
            if ((this.getNodePathOperationCompleted == null))
            {
                this.getNodePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNodePathOperationCompleted);
            }
            this.InvokeAsync("getNodePath", new object[] {
                    token,
                    uuid}, this.getNodePathOperationCompleted, userState);
        }

        private void OngetNodePathOperationCompleted(object arg)
        {
            if ((this.getNodePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNodePathCompleted(this, new getNodePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getTemplatesFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getTemplatesFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetTemplatesFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getTemplatesFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetTemplatesFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getTemplatesFolderAsync(string token)
        {
            this.getTemplatesFolderAsync(token, null);
        }

        /// <remarks/>
        public void getTemplatesFolderAsync(string token, object userState)
        {
            if ((this.getTemplatesFolderOperationCompleted == null))
            {
                this.getTemplatesFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTemplatesFolderOperationCompleted);
            }
            this.InvokeAsync("getTemplatesFolder", new object[] {
                    token}, this.getTemplatesFolderOperationCompleted, userState);
        }

        private void OngetTemplatesFolderOperationCompleted(object arg)
        {
            if ((this.getTemplatesFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTemplatesFolderCompleted(this, new getTemplatesFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void purgeTrash([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            this.Invoke("purgeTrash", new object[] {
                    token});
        }

        /// <remarks/>
        public System.IAsyncResult BeginpurgeTrash(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("purgeTrash", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public void EndpurgeTrash(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void purgeTrashAsync(string token)
        {
            this.purgeTrashAsync(token, null);
        }

        /// <remarks/>
        public void purgeTrashAsync(string token, object userState)
        {
            if ((this.purgeTrashOperationCompleted == null))
            {
                this.purgeTrashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpurgeTrashOperationCompleted);
            }
            this.InvokeAsync("purgeTrash", new object[] {
                    token}, this.purgeTrashOperationCompleted, userState);
        }

        private void OnpurgeTrashOperationCompleted(object arg)
        {
            if ((this.purgeTrashCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.purgeTrashCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getMailFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getMailFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetMailFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getMailFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetMailFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getMailFolderAsync(string token)
        {
            this.getMailFolderAsync(token, null);
        }

        /// <remarks/>
        public void getMailFolderAsync(string token, object userState)
        {
            if ((this.getMailFolderOperationCompleted == null))
            {
                this.getMailFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMailFolderOperationCompleted);
            }
            this.InvokeAsync("getMailFolder", new object[] {
                    token}, this.getMailFolderOperationCompleted, userState);
        }

        private void OngetMailFolderOperationCompleted(object arg)
        {
            if ((this.getMailFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMailFolderCompleted(this, new getMailFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getThesaurusFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getThesaurusFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetThesaurusFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getThesaurusFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetThesaurusFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getThesaurusFolderAsync(string token)
        {
            this.getThesaurusFolderAsync(token, null);
        }

        /// <remarks/>
        public void getThesaurusFolderAsync(string token, object userState)
        {
            if ((this.getThesaurusFolderOperationCompleted == null))
            {
                this.getThesaurusFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThesaurusFolderOperationCompleted);
            }
            this.InvokeAsync("getThesaurusFolder", new object[] {
                    token}, this.getThesaurusFolderOperationCompleted, userState);
        }

        private void OngetThesaurusFolderOperationCompleted(object arg)
        {
            if ((this.getThesaurusFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThesaurusFolderCompleted(this, new getThesaurusFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getPersonalFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getPersonalFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPersonalFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPersonalFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetPersonalFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getPersonalFolderAsync(string token)
        {
            this.getPersonalFolderAsync(token, null);
        }

        /// <remarks/>
        public void getPersonalFolderAsync(string token, object userState)
        {
            if ((this.getPersonalFolderOperationCompleted == null))
            {
                this.getPersonalFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonalFolderOperationCompleted);
            }
            this.InvokeAsync("getPersonalFolder", new object[] {
                    token}, this.getPersonalFolderOperationCompleted, userState);
        }

        private void OngetPersonalFolderOperationCompleted(object arg)
        {
            if ((this.getPersonalFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonalFolderCompleted(this, new getPersonalFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasNode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string path)
        {
            object[] results = this.Invoke("hasNode", new object[] {
                    token,
                    path});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginhasNode(string token, string path, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("hasNode", new object[] {
                    token,
                    path}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndhasNode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void hasNodeAsync(string token, string path)
        {
            this.hasNodeAsync(token, path, null);
        }

        /// <remarks/>
        public void hasNodeAsync(string token, string path, object userState)
        {
            if ((this.hasNodeOperationCompleted == null))
            {
                this.hasNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasNodeOperationCompleted);
            }
            this.InvokeAsync("hasNode", new object[] {
                    token,
                    path}, this.hasNodeOperationCompleted, userState);
        }

        private void OnhasNodeOperationCompleted(object arg)
        {
            if ((this.hasNodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasNodeCompleted(this, new hasNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getRootFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getRootFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetRootFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getRootFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetRootFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getRootFolderAsync(string token)
        {
            this.getRootFolderAsync(token, null);
        }

        /// <remarks/>
        public void getRootFolderAsync(string token, object userState)
        {
            if ((this.getRootFolderOperationCompleted == null))
            {
                this.getRootFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRootFolderOperationCompleted);
            }
            this.InvokeAsync("getRootFolder", new object[] {
                    token}, this.getRootFolderOperationCompleted, userState);
        }

        private void OngetRootFolderOperationCompleted(object arg)
        {
            if ((this.getRootFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRootFolderCompleted(this, new getRootFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getTrashFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getTrashFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetTrashFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getTrashFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetTrashFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getTrashFolderAsync(string token)
        {
            this.getTrashFolderAsync(token, null);
        }

        /// <remarks/>
        public void getTrashFolderAsync(string token, object userState)
        {
            if ((this.getTrashFolderOperationCompleted == null))
            {
                this.getTrashFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrashFolderOperationCompleted);
            }
            this.InvokeAsync("getTrashFolder", new object[] {
                    token}, this.getTrashFolderOperationCompleted, userState);
        }

        private void OngetTrashFolderOperationCompleted(object arg)
        {
            if ((this.getTrashFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrashFolderCompleted(this, new getTrashFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public appVersion getAppVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getAppVersion", new object[] {
                    token});
            return ((appVersion)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetAppVersion(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAppVersion", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public appVersion EndgetAppVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((appVersion)(results[0]));
        }

        /// <remarks/>
        public void getAppVersionAsync(string token)
        {
            this.getAppVersionAsync(token, null);
        }

        /// <remarks/>
        public void getAppVersionAsync(string token, object userState)
        {
            if ((this.getAppVersionOperationCompleted == null))
            {
                this.getAppVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAppVersionOperationCompleted);
            }
            this.InvokeAsync("getAppVersion", new object[] {
                    token}, this.getAppVersionOperationCompleted, userState);
        }

        private void OngetAppVersionOperationCompleted(object arg)
        {
            if ((this.getAppVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAppVersionCompleted(this, new getAppVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getCategoriesFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token)
        {
            object[] results = this.Invoke("getCategoriesFolder", new object[] {
                    token});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCategoriesFolder(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCategoriesFolder", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetCategoriesFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getCategoriesFolderAsync(string token)
        {
            this.getCategoriesFolderAsync(token, null);
        }

        /// <remarks/>
        public void getCategoriesFolderAsync(string token, object userState)
        {
            if ((this.getCategoriesFolderOperationCompleted == null))
            {
                this.getCategoriesFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategoriesFolderOperationCompleted);
            }
            this.InvokeAsync("getCategoriesFolder", new object[] {
                    token}, this.getCategoriesFolderOperationCompleted, userState);
        }

        private void OngetCategoriesFolderOperationCompleted(object arg)
        {
            if ((this.getCategoriesFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategoriesFolderCompleted(this, new getCategoriesFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.openkm.com")]
    public partial class folder
    {

        private string authorField;

        private folder[] categoriesField;

        private System.DateTime createdField;

        private bool createdFieldSpecified;

        private bool hasChildrenField;

        private string[] keywordsField;

        private note[] notesField;

        private string pathField;

        private int permissionsField;

        private bool subscribedField;

        private string[] subscriptorsField;

        private string uuidField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string author
        {
            get
            {
                return this.authorField;
            }
            set
            {
                this.authorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categories", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public folder[] categories
        {
            get
            {
                return this.categoriesField;
            }
            set
            {
                this.categoriesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime created
        {
            get
            {
                return this.createdField;
            }
            set
            {
                this.createdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdSpecified
        {
            get
            {
                return this.createdFieldSpecified;
            }
            set
            {
                this.createdFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasChildren
        {
            get
            {
                return this.hasChildrenField;
            }
            set
            {
                this.hasChildrenField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("keywords", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] keywords
        {
            get
            {
                return this.keywordsField;
            }
            set
            {
                this.keywordsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("notes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public note[] notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                this.notesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int permissions
        {
            get
            {
                return this.permissionsField;
            }
            set
            {
                this.permissionsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool subscribed
        {
            get
            {
                return this.subscribedField;
            }
            set
            {
                this.subscribedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscriptors", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] subscriptors
        {
            get
            {
                return this.subscriptorsField;
            }
            set
            {
                this.subscriptorsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.openkm.com")]
    public partial class note
    {

        private string authorField;

        private System.DateTime dateField;

        private bool dateFieldSpecified;

        private string pathField;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string author
        {
            get
            {
                return this.authorField;
            }
            set
            {
                this.authorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified
        {
            get
            {
                return this.dateFieldSpecified;
            }
            set
            {
                this.dateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text
        {
            get
            {
                return this.textField;
            }
            set
            {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.openkm.com")]
    public partial class appVersion
    {

        private string buildField;

        private string extensionField;

        private string maintenanceField;

        private string majorField;

        private string minorField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string build
        {
            get
            {
                return this.buildField;
            }
            set
            {
                this.buildField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extension
        {
            get
            {
                return this.extensionField;
            }
            set
            {
                this.extensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string maintenance
        {
            get
            {
                return this.maintenanceField;
            }
            set
            {
                this.maintenanceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string major
        {
            get
            {
                return this.majorField;
            }
            set
            {
                this.majorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string minor
        {
            get
            {
                return this.minorField;
            }
            set
            {
                this.minorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getNodeUuidCompletedEventHandler(object sender, getNodeUuidCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNodeUuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getNodeUuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getNodePathCompletedEventHandler(object sender, getNodePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNodePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getNodePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getTemplatesFolderCompletedEventHandler(object sender, getTemplatesFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTemplatesFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getTemplatesFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void purgeTrashCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getMailFolderCompletedEventHandler(object sender, getMailFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMailFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMailFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getThesaurusFolderCompletedEventHandler(object sender, getThesaurusFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThesaurusFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getThesaurusFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getPersonalFolderCompletedEventHandler(object sender, getPersonalFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonalFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPersonalFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void hasNodeCompletedEventHandler(object sender, hasNodeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal hasNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getRootFolderCompletedEventHandler(object sender, getRootFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRootFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRootFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getTrashFolderCompletedEventHandler(object sender, getTrashFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrashFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getTrashFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getAppVersionCompletedEventHandler(object sender, getAppVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAppVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAppVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public appVersion Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((appVersion)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCategoriesFolderCompletedEventHandler(object sender, getCategoriesFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategoriesFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCategoriesFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

}