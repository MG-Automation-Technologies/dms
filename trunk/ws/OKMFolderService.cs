//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.3038.
// 

namespace MSOpenKMCore.folder.ws
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "OKMFolderSoapBinding", Namespace = "http://ws.openkm.com")]
    public partial class OKMFolderService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback createOperationCompleted;

        private System.Threading.SendOrPostCallback moveOperationCompleted;

        private System.Threading.SendOrPostCallback deleteOperationCompleted;

        private System.Threading.SendOrPostCallback isValidOperationCompleted;

        private System.Threading.SendOrPostCallback getPathOperationCompleted;

        private System.Threading.SendOrPostCallback getChildrenOperationCompleted;

        private System.Threading.SendOrPostCallback getPropertiesOperationCompleted;

        private System.Threading.SendOrPostCallback getChildsOperationCompleted;

        private System.Threading.SendOrPostCallback renameOperationCompleted;

        private System.Threading.SendOrPostCallback createSimpleOperationCompleted;

        /// <remarks/>
        public OKMFolderService()
        {
            this.Url = "http://localhost:8080/OpenKM/services/OKMFolder";
        }

        /// <remarks/>
        public OKMFolderService(string url)
        {
            if (Url.EndsWith("/"))
            {
                this.Url = Url + "services/OKMFolder";
            }
            else
            {
                this.Url = Url + "/services/OKMFolder";
            }
        }

        /// <remarks/>
        public event createCompletedEventHandler createCompleted;

        /// <remarks/>
        public event moveCompletedEventHandler moveCompleted;

        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;

        /// <remarks/>
        public event isValidCompletedEventHandler isValidCompleted;

        /// <remarks/>
        public event getPathCompletedEventHandler getPathCompleted;

        /// <remarks/>
        public event getChildrenCompletedEventHandler getChildrenCompleted;

        /// <remarks/>
        public event getPropertiesCompletedEventHandler getPropertiesCompleted;

        /// <remarks/>
        public event getChildsCompletedEventHandler getChildsCompleted;

        /// <remarks/>
        public event renameCompletedEventHandler renameCompleted;

        /// <remarks/>
        public event createSimpleCompletedEventHandler createSimpleCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder create([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] folder fld)
        {
            object[] results = this.Invoke("create", new object[] {
                    token,
                    fld});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Begincreate(string token, folder fld, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("create", new object[] {
                    token,
                    fld}, callback, asyncState);
        }

        /// <remarks/>
        public folder Endcreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void createAsync(string token, folder fld)
        {
            this.createAsync(token, fld, null);
        }

        /// <remarks/>
        public void createAsync(string token, folder fld, object userState)
        {
            if ((this.createOperationCompleted == null))
            {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                    token,
                    fld}, this.createOperationCompleted, userState);
        }

        private void OncreateOperationCompleted(object arg)
        {
            if ((this.createCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void move([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string dstPath)
        {
            this.Invoke("move", new object[] {
                    token,
                    fldPath,
                    dstPath});
        }

        /// <remarks/>
        public System.IAsyncResult Beginmove(string token, string fldPath, string dstPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("move", new object[] {
                    token,
                    fldPath,
                    dstPath}, callback, asyncState);
        }

        /// <remarks/>
        public void Endmove(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void moveAsync(string token, string fldPath, string dstPath)
        {
            this.moveAsync(token, fldPath, dstPath, null);
        }

        /// <remarks/>
        public void moveAsync(string token, string fldPath, string dstPath, object userState)
        {
            if ((this.moveOperationCompleted == null))
            {
                this.moveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveOperationCompleted);
            }
            this.InvokeAsync("move", new object[] {
                    token,
                    fldPath,
                    dstPath}, this.moveOperationCompleted, userState);
        }

        private void OnmoveOperationCompleted(object arg)
        {
            if ((this.moveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void delete([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath)
        {
            this.Invoke("delete", new object[] {
                    token,
                    fldPath});
        }

        /// <remarks/>
        public System.IAsyncResult Begindelete(string token, string fldPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("delete", new object[] {
                    token,
                    fldPath}, callback, asyncState);
        }

        /// <remarks/>
        public void Enddelete(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteAsync(string token, string fldPath)
        {
            this.deleteAsync(token, fldPath, null);
        }

        /// <remarks/>
        public void deleteAsync(string token, string fldPath, object userState)
        {
            if ((this.deleteOperationCompleted == null))
            {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                    token,
                    fldPath}, this.deleteOperationCompleted, userState);
        }

        private void OndeleteOperationCompleted(object arg)
        {
            if ((this.deleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isValid([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath)
        {
            object[] results = this.Invoke("isValid", new object[] {
                    token,
                    fldPath});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginisValid(string token, string fldPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("isValid", new object[] {
                    token,
                    fldPath}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndisValid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isValidAsync(string token, string fldPath)
        {
            this.isValidAsync(token, fldPath, null);
        }

        /// <remarks/>
        public void isValidAsync(string token, string fldPath, object userState)
        {
            if ((this.isValidOperationCompleted == null))
            {
                this.isValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidOperationCompleted);
            }
            this.InvokeAsync("isValid", new object[] {
                    token,
                    fldPath}, this.isValidOperationCompleted, userState);
        }

        private void OnisValidOperationCompleted(object arg)
        {
            if ((this.isValidCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidCompleted(this, new isValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid)
        {
            object[] results = this.Invoke("getPath", new object[] {
                    token,
                    uuid});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPath(string token, string uuid, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPath", new object[] {
                    token,
                    uuid}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetPath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getPathAsync(string token, string uuid)
        {
            this.getPathAsync(token, uuid, null);
        }

        /// <remarks/>
        public void getPathAsync(string token, string uuid, object userState)
        {
            if ((this.getPathOperationCompleted == null))
            {
                this.getPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPathOperationCompleted);
            }
            this.InvokeAsync("getPath", new object[] {
                    token,
                    uuid}, this.getPathOperationCompleted, userState);
        }

        private void OngetPathOperationCompleted(object arg)
        {
            if ((this.getPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPathCompleted(this, new getPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder[] getChildren([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath)
        {
            object[] results = this.Invoke("getChildren", new object[] {
                    token,
                    fldPath});
            return ((folder[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetChildren(string token, string fldPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getChildren", new object[] {
                    token,
                    fldPath}, callback, asyncState);
        }

        /// <remarks/>
        public folder[] EndgetChildren(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder[])(results[0]));
        }

        /// <remarks/>
        public void getChildrenAsync(string token, string fldPath)
        {
            this.getChildrenAsync(token, fldPath, null);
        }

        /// <remarks/>
        public void getChildrenAsync(string token, string fldPath, object userState)
        {
            if ((this.getChildrenOperationCompleted == null))
            {
                this.getChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildrenOperationCompleted);
            }
            this.InvokeAsync("getChildren", new object[] {
                    token,
                    fldPath}, this.getChildrenOperationCompleted, userState);
        }

        private void OngetChildrenOperationCompleted(object arg)
        {
            if ((this.getChildrenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildrenCompleted(this, new getChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder getProperties([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath)
        {
            object[] results = this.Invoke("getProperties", new object[] {
                    token,
                    fldPath});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetProperties(string token, string fldPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getProperties", new object[] {
                    token,
                    fldPath}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndgetProperties(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void getPropertiesAsync(string token, string fldPath)
        {
            this.getPropertiesAsync(token, fldPath, null);
        }

        /// <remarks/>
        public void getPropertiesAsync(string token, string fldPath, object userState)
        {
            if ((this.getPropertiesOperationCompleted == null))
            {
                this.getPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropertiesOperationCompleted);
            }
            this.InvokeAsync("getProperties", new object[] {
                    token,
                    fldPath}, this.getPropertiesOperationCompleted, userState);
        }

        private void OngetPropertiesOperationCompleted(object arg)
        {
            if ((this.getPropertiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropertiesCompleted(this, new getPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder[] getChilds([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath)
        {
            object[] results = this.Invoke("getChilds", new object[] {
                    token,
                    fldPath});
            return ((folder[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetChilds(string token, string fldPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getChilds", new object[] {
                    token,
                    fldPath}, callback, asyncState);
        }

        /// <remarks/>
        public folder[] EndgetChilds(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder[])(results[0]));
        }

        /// <remarks/>
        public void getChildsAsync(string token, string fldPath)
        {
            this.getChildsAsync(token, fldPath, null);
        }

        /// <remarks/>
        public void getChildsAsync(string token, string fldPath, object userState)
        {
            if ((this.getChildsOperationCompleted == null))
            {
                this.getChildsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildsOperationCompleted);
            }
            this.InvokeAsync("getChilds", new object[] {
                    token,
                    fldPath}, this.getChildsOperationCompleted, userState);
        }

        private void OngetChildsOperationCompleted(object arg)
        {
            if ((this.getChildsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildsCompleted(this, new getChildsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder rename([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName)
        {
            object[] results = this.Invoke("rename", new object[] {
                    token,
                    fldPath,
                    newName});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginrename(string token, string fldPath, string newName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("rename", new object[] {
                    token,
                    fldPath,
                    newName}, callback, asyncState);
        }

        /// <remarks/>
        public folder Endrename(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void renameAsync(string token, string fldPath, string newName)
        {
            this.renameAsync(token, fldPath, newName, null);
        }

        /// <remarks/>
        public void renameAsync(string token, string fldPath, string newName, object userState)
        {
            if ((this.renameOperationCompleted == null))
            {
                this.renameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameOperationCompleted);
            }
            this.InvokeAsync("rename", new object[] {
                    token,
                    fldPath,
                    newName}, this.renameOperationCompleted, userState);
        }

        private void OnrenameOperationCompleted(object arg)
        {
            if ((this.renameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameCompleted(this, new renameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ws.openkm.com", ResponseNamespace = "http://ws.openkm.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public folder createSimple([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string fldPath)
        {
            object[] results = this.Invoke("createSimple", new object[] {
                    token,
                    fldPath});
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegincreateSimple(string token, string fldPath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("createSimple", new object[] {
                    token,
                    fldPath}, callback, asyncState);
        }

        /// <remarks/>
        public folder EndcreateSimple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((folder)(results[0]));
        }

        /// <remarks/>
        public void createSimpleAsync(string token, string fldPath)
        {
            this.createSimpleAsync(token, fldPath, null);
        }

        /// <remarks/>
        public void createSimpleAsync(string token, string fldPath, object userState)
        {
            if ((this.createSimpleOperationCompleted == null))
            {
                this.createSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSimpleOperationCompleted);
            }
            this.InvokeAsync("createSimple", new object[] {
                    token,
                    fldPath}, this.createSimpleOperationCompleted, userState);
        }

        private void OncreateSimpleOperationCompleted(object arg)
        {
            if ((this.createSimpleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSimpleCompleted(this, new createSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.openkm.com")]
    public partial class folder
    {

        private string authorField;

        private folder[] categoriesField;

        private System.DateTime createdField;

        private bool createdFieldSpecified;

        private bool hasChildrenField;

        private string[] keywordsField;

        private note[] notesField;

        private string pathField;

        private int permissionsField;

        private bool subscribedField;

        private string[] subscriptorsField;

        private string uuidField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string author
        {
            get
            {
                return this.authorField;
            }
            set
            {
                this.authorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categories", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public folder[] categories
        {
            get
            {
                return this.categoriesField;
            }
            set
            {
                this.categoriesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime created
        {
            get
            {
                return this.createdField;
            }
            set
            {
                this.createdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdSpecified
        {
            get
            {
                return this.createdFieldSpecified;
            }
            set
            {
                this.createdFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasChildren
        {
            get
            {
                return this.hasChildrenField;
            }
            set
            {
                this.hasChildrenField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("keywords", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] keywords
        {
            get
            {
                return this.keywordsField;
            }
            set
            {
                this.keywordsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("notes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public note[] notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                this.notesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int permissions
        {
            get
            {
                return this.permissionsField;
            }
            set
            {
                this.permissionsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool subscribed
        {
            get
            {
                return this.subscribedField;
            }
            set
            {
                this.subscribedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscriptors", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] subscriptors
        {
            get
            {
                return this.subscriptorsField;
            }
            set
            {
                this.subscriptorsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid
        {
            get
            {
                return this.uuidField;
            }
            set
            {
                this.uuidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://ws.openkm.com")]
    public partial class note
    {

        private string authorField;

        private System.DateTime dateField;

        private bool dateFieldSpecified;

        private string pathField;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string author
        {
            get
            {
                return this.authorField;
            }
            set
            {
                this.authorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified
        {
            get
            {
                return this.dateFieldSpecified;
            }
            set
            {
                this.dateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text
        {
            get
            {
                return this.textField;
            }
            set
            {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void moveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void isValidCompletedEventHandler(object sender, isValidCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getPathCompletedEventHandler(object sender, getPathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getChildrenCompletedEventHandler(object sender, getChildrenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getPropertiesCompletedEventHandler(object sender, getPropertiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getChildsCompletedEventHandler(object sender, getChildsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChildsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getChildsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void renameCompletedEventHandler(object sender, renameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal renameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createSimpleCompletedEventHandler(object sender, createSimpleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal createSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public folder Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((folder)(this.results[0]));
            }
        }
    }

}